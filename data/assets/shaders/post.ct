module sm::shader;

config shader = true;
config math = true;

[[binding(s0)]]
var gSampler: SamplerState;

[[binding(t0)]]
var gTexture: Texture2D;

struct VertexInput {
    [[sv_semantic(POSITION)]]
    position: float4;

    [[semantic(TEXCOORD)]]
    uv: float2;
}

@[hlsl::entry(vertex_shader)]
def main(position: float3, uv: float2): VertexInput = {
    .position = float4(position, 1.f),
    .uv = uv
};

@[hlsl::entry(pixel_shader)]
def main(input: VertexInput): float4 = gTexture.Sample(gSampler, input.uv);
