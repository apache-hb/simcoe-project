Checks:
  - 'performance*,portability*,bugprone*,clang-analyzer*,cert*,concurrency*,readability-identifier-naming'
  - '-bugprone-easily-swappable-parameters'
  - '-performance-no-int-to-ptr'
  - '-bugprone-lambda-function-name'
  - '-bugprone-dynamic-static-initializers'
  - '-bugprone-narrowing-conversions'
  - 'bugprone-exception-escape'
CheckOptions:
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-identifier-naming.ParameterCase, value: aNy_CasE }
  - { key: readability-identifier-naming.LocalVariableCase, value: aNy_CasE }
  - { key: readability-identifier-naming.ClassMemberCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassMemberPrefix, value: g }
  - { key: readability-identifier-naming.PrivateMemberCase, value: CamelCase }
  - { key: readability-identifier-naming.PrivateMemberPrefix, value: m }
  - { key: readability-identifier-naming.UnionCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantPrefix, value: e }
  - { key: readability-identifier-naming.TypedefCase, value: lower_case }
  - { key: readability-identifier-naming.TypedefSuffix, value: _t }
  - { key: readability-identifier-naming.TypeAliasCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix, value: k }
  - { key: readability-identifier-naming.GlobalVariableCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalVariablePrefix, value: g }
  - { key: bugprone-lambda-function-name.IgnoreMacros, value: true }
HeaderFilterRegex: ''
