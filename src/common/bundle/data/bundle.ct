module sm::bundle;

import "<vector>";

[[layout(export)]]
variant AssetType : uint16 {
    [[format("invalid")]] default Invalid = 0
    [[format("shader")]] case ShaderProgram = 1
    [[format("texture")]] case Texture = 2
    [[format("mesh")]] case Mesh = 3
    [[format("anim")]] case Animation = 4
}

[[layout(export)]]
variant BundleVersion : uint16 {
    default CurrentVersion = 0
    [[format("24/01/24")]] case Version0 = 0
}

[[layout(export)]]
variant TextureFormat : uint8 {
    [[format("bc7")]] case LINEAR_BC7 = 0
    [[format("bc7.sRGB")]] case SRGB_BC7 = 1
}

[[layout(export)]]
struct Bundle {
    magic: uint32;
    checksum: uint32;
    version: uint16;
}

[[layout(export)]]
struct ShaderBytecode {
    name: string;
    size: uint16;
    data: opaque("std::vector<uint8_t>");
}

[[layout(export)]]
struct Texture {
    name: string;
    width: uint16;
    height: uint16;
    format: TextureFormat;
    data: opaque("std::vector<uint8_t>");
}
