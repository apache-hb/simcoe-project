module sm::logs;

import "<string_view>";

// keep these in order of severity so that we can compare them
[[ordered]]
variant Severity {
    [[format("trace")]] case Trace = 0 // trace
    [[format("info")]] case Info = 1 // informational
    [[format("warn")]] case Warning = 2 // warning
    [[format("error")]] case Error = 3 // nonfatal error
    [[format("fatal")]] case Fatal = 4 // fatal error
    [[format("assert")]] case Panic = 5 // fatal error caused by an assertion
}

variant Category {
    [[format("global")]] default Global = 0
    [[format("render")]] case Render = 1
    [[format("system")]] case System = 2
    [[format("scheduler")]] case Schedule = 3
    [[format("input")]] case Input = 4
    [[format("audio")]] case Audio = 5
    [[format("network")]] case Network = 6
    [[format("service")]] case Service = 7
    [[format("physics")]] case Physics = 8
    [[format("ui")]] case UI = 9
    [[format("debug")]] case Debug = 10
    case Count = 11 // always keep this up to date
}

struct Message {
    message: opaque("std::string_view");
    category: Category;
    severity: Severity;
    timestamp: uint32; // milliseconds since program start
    thread: uint16;
}
